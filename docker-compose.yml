services:
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: services/catalog/Catalog.API/Dockerfile
    ports:
     - "8000:8000"
    depends_on:
     - catalogdb
    environment:
     - ASPNETCORE_URLS=http://+:8000
     - DatabaseSettings__ConnectionString=mongodb://catalogdb:27017
     - DatabaseSettings__DatabaseName=Catalogdb
     - DatabaseSettings__BrandsCollection=Brands
     - DatabaseSettings__TypesCollection=Types
     - DatabaseSettings__ProductsCollection=products
  
   
     
  catalogdb:
     image: mongo
     container_name: catalogdb
     ports:
      - "27017:27017"
     volumes:
      - catalogdata:/data/db
  basketdb: 
     image: redis:alpine
     container_name: basketdb
     ports:
      - "6379:6379"
     restart: always
   
  discountdb:
      image: postgres
      container_name: discountdb
      environment:
        - POSTGRES_USER=admin
        - POSTGRES_PASSWORD=Password@1
        - POSTGRES_DB=DiscountDb
      restart: always
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:
         test: ["CMD-SHELL","pg_isready -U admin -d DiscountDb"]
         interval: 10s
         timeout: 5s
         retries: 5
  pagadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@ecommerce.com
        - PGADMIN_DEFAULT_PASSWORD=Password@1
      restart: always
      ports:
        - "5050:80"
      volumes:
        - pgadmin_data:/root/pgadmin
     

  
  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: services/Basket/Basket.APi/Dockerfile
    ports:
      - "8010:8000"
    depends_on:
      - basketdb
    environment:
     - ASPNETCORE_URLS=http://+:8000
     - CacheSettings__ConnectionString=basketdb:6379
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - 7000:8000
      - 9000:9000
    volumes:
      - portainer_data:/data

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: services/Discount/Discount.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DatabaseSettings_ConnectionString=server=discountdb;Database=DiscountDb;port=5432;User Id = admin;Password=Password@1
    container_name: discount.api
    depends_on:
       discountdb:
          condition: service_healthy
    ports:
      - "8002:8000"

volumes:
  catalogdata:
  portainer_data:
  postgres_data:
  pgadmin_data:



